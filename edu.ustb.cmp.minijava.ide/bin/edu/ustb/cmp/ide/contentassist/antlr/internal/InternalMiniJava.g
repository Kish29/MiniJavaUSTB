/*
 * generated by Xtext 2.25.0
 */
grammar InternalMiniJava;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package edu.ustb.cmp.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package edu.ustb.cmp.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import edu.ustb.cmp.services.MiniJavaGrammarAccess;

}
@parser::members {
	private MiniJavaGrammarAccess grammarAccess;

	public void setGrammarAccess(MiniJavaGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleMiniJava
entryRuleMiniJava
:
{ before(grammarAccess.getMiniJavaRule()); }
	 ruleMiniJava
{ after(grammarAccess.getMiniJavaRule()); } 
	 EOF 
;

// Rule MiniJava
ruleMiniJava 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMiniJavaAccess().getGroup()); }
		(rule__MiniJava__Group__0)
		{ after(grammarAccess.getMiniJavaAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePackageDecl
entryRulePackageDecl
:
{ before(grammarAccess.getPackageDeclRule()); }
	 rulePackageDecl
{ after(grammarAccess.getPackageDeclRule()); } 
	 EOF 
;

// Rule PackageDecl
rulePackageDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPackageDeclAccess().getGroup()); }
		(rule__PackageDecl__Group__0)
		{ after(grammarAccess.getPackageDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportDecl
entryRuleImportDecl
:
{ before(grammarAccess.getImportDeclRule()); }
	 ruleImportDecl
{ after(grammarAccess.getImportDeclRule()); } 
	 EOF 
;

// Rule ImportDecl
ruleImportDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportDeclAccess().getGroup()); }
		(rule__ImportDecl__Group__0)
		{ after(grammarAccess.getImportDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMainClassDecl
entryRuleMainClassDecl
:
{ before(grammarAccess.getMainClassDeclRule()); }
	 ruleMainClassDecl
{ after(grammarAccess.getMainClassDeclRule()); } 
	 EOF 
;

// Rule MainClassDecl
ruleMainClassDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMainClassDeclAccess().getGroup()); }
		(rule__MainClassDecl__Group__0)
		{ after(grammarAccess.getMainClassDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClassDecl
entryRuleClassDecl
:
{ before(grammarAccess.getClassDeclRule()); }
	 ruleClassDecl
{ after(grammarAccess.getClassDeclRule()); } 
	 EOF 
;

// Rule ClassDecl
ruleClassDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClassDeclAccess().getGroup()); }
		(rule__ClassDecl__Group__0)
		{ after(grammarAccess.getClassDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleQualifiedName
entryRuleQualifiedName
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
		(rule__QualifiedName__Group__0)
		{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDoubleLiteral
entryRuleDoubleLiteral
:
{ before(grammarAccess.getDoubleLiteralRule()); }
	 ruleDoubleLiteral
{ after(grammarAccess.getDoubleLiteralRule()); } 
	 EOF 
;

// Rule DoubleLiteral
ruleDoubleLiteral 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDoubleLiteralAccess().getGroup()); }
		(rule__DoubleLiteral__Group__0)
		{ after(grammarAccess.getDoubleLiteralAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstantValue
entryRuleConstantValue
:
{ before(grammarAccess.getConstantValueRule()); }
	 ruleConstantValue
{ after(grammarAccess.getConstantValueRule()); } 
	 EOF 
;

// Rule ConstantValue
ruleConstantValue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantValueAccess().getAlternatives()); }
		(rule__ConstantValue__Alternatives)
		{ after(grammarAccess.getConstantValueAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicDataType
entryRuleBasicDataType
:
{ before(grammarAccess.getBasicDataTypeRule()); }
	 ruleBasicDataType
{ after(grammarAccess.getBasicDataTypeRule()); } 
	 EOF 
;

// Rule BasicDataType
ruleBasicDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicDataTypeAccess().getAlternatives()); }
		(rule__BasicDataType__Alternatives)
		{ after(grammarAccess.getBasicDataTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataType
entryRuleDataType
:
{ before(grammarAccess.getDataTypeRule()); }
	 ruleDataType
{ after(grammarAccess.getDataTypeRule()); } 
	 EOF 
;

// Rule DataType
ruleDataType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
		(rule__DataType__Alternatives)
		{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariableDecl
entryRuleVariableDecl
:
{ before(grammarAccess.getVariableDeclRule()); }
	 ruleVariableDecl
{ after(grammarAccess.getVariableDeclRule()); } 
	 EOF 
;

// Rule VariableDecl
ruleVariableDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableDeclAccess().getGroup()); }
		(rule__VariableDecl__Group__0)
		{ after(grammarAccess.getVariableDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturnType
entryRuleReturnType
:
{ before(grammarAccess.getReturnTypeRule()); }
	 ruleReturnType
{ after(grammarAccess.getReturnTypeRule()); } 
	 EOF 
;

// Rule ReturnType
ruleReturnType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnTypeAccess().getAlternatives()); }
		(rule__ReturnType__Alternatives)
		{ after(grammarAccess.getReturnTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleParameter
entryRuleParameter
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getParameterAccess().getGroup()); }
		(rule__Parameter__Group__0)
		{ after(grammarAccess.getParameterAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMethodDecl
entryRuleMethodDecl
:
{ before(grammarAccess.getMethodDeclRule()); }
	 ruleMethodDecl
{ after(grammarAccess.getMethodDeclRule()); } 
	 EOF 
;

// Rule MethodDecl
ruleMethodDecl 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMethodDeclAccess().getGroup()); }
		(rule__MethodDecl__Group__0)
		{ after(grammarAccess.getMethodDeclAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMember
entryRuleMember
:
{ before(grammarAccess.getMemberRule()); }
	 ruleMember
{ after(grammarAccess.getMemberRule()); } 
	 EOF 
;

// Rule Member
ruleMember 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMemberAccess().getAlternatives()); }
		(rule__Member__Alternatives)
		{ after(grammarAccess.getMemberAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStatement
entryRuleStatement
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStatementAccess().getAlternatives()); }
		(rule__Statement__Alternatives)
		{ after(grammarAccess.getStatementAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLValueExp
entryRuleLValueExp
:
{ before(grammarAccess.getLValueExpRule()); }
	 ruleLValueExp
{ after(grammarAccess.getLValueExpRule()); } 
	 EOF 
;

// Rule LValueExp
ruleLValueExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLValueExpAccess().getAlternatives()); }
		(rule__LValueExp__Alternatives)
		{ after(grammarAccess.getLValueExpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAssignments
entryRuleAssignments
:
{ before(grammarAccess.getAssignmentsRule()); }
	 ruleAssignments
{ after(grammarAccess.getAssignmentsRule()); } 
	 EOF 
;

// Rule Assignments
ruleAssignments 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAssignmentsAccess().getGroup()); }
		(rule__Assignments__Group__0)
		{ after(grammarAccess.getAssignmentsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIfStatements
entryRuleIfStatements
:
{ before(grammarAccess.getIfStatementsRule()); }
	 ruleIfStatements
{ after(grammarAccess.getIfStatementsRule()); } 
	 EOF 
;

// Rule IfStatements
ruleIfStatements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIfStatementsAccess().getGroup()); }
		(rule__IfStatements__Group__0)
		{ after(grammarAccess.getIfStatementsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElseIfStatements
entryRuleElseIfStatements
:
{ before(grammarAccess.getElseIfStatementsRule()); }
	 ruleElseIfStatements
{ after(grammarAccess.getElseIfStatementsRule()); } 
	 EOF 
;

// Rule ElseIfStatements
ruleElseIfStatements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElseIfStatementsAccess().getGroup()); }
		(rule__ElseIfStatements__Group__0)
		{ after(grammarAccess.getElseIfStatementsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElseStatement
entryRuleElseStatement
:
{ before(grammarAccess.getElseStatementRule()); }
	 ruleElseStatement
{ after(grammarAccess.getElseStatementRule()); } 
	 EOF 
;

// Rule ElseStatement
ruleElseStatement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElseStatementAccess().getGroup()); }
		(rule__ElseStatement__Group__0)
		{ after(grammarAccess.getElseStatementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleWhileStatements
entryRuleWhileStatements
:
{ before(grammarAccess.getWhileStatementsRule()); }
	 ruleWhileStatements
{ after(grammarAccess.getWhileStatementsRule()); } 
	 EOF 
;

// Rule WhileStatements
ruleWhileStatements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getWhileStatementsAccess().getGroup()); }
		(rule__WhileStatements__Group__0)
		{ after(grammarAccess.getWhileStatementsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleReturnStatements
entryRuleReturnStatements
:
{ before(grammarAccess.getReturnStatementsRule()); }
	 ruleReturnStatements
{ after(grammarAccess.getReturnStatementsRule()); } 
	 EOF 
;

// Rule ReturnStatements
ruleReturnStatements 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getReturnStatementsAccess().getGroup()); }
		(rule__ReturnStatements__Group__0)
		{ after(grammarAccess.getReturnStatementsAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleOperator
entryRuleOperator
:
{ before(grammarAccess.getOperatorRule()); }
	 ruleOperator
{ after(grammarAccess.getOperatorRule()); } 
	 EOF 
;

// Rule Operator
ruleOperator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOperatorAccess().getAlternatives()); }
		(rule__Operator__Alternatives)
		{ after(grammarAccess.getOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCalcExp
entryRuleCalcExp
:
{ before(grammarAccess.getCalcExpRule()); }
	 ruleCalcExp
{ after(grammarAccess.getCalcExpRule()); } 
	 EOF 
;

// Rule CalcExp
ruleCalcExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCalcExpAccess().getAlternatives()); }
		(rule__CalcExp__Alternatives)
		{ after(grammarAccess.getCalcExpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCompareExp
entryRuleCompareExp
:
{ before(grammarAccess.getCompareExpRule()); }
	 ruleCompareExp
{ after(grammarAccess.getCompareExpRule()); } 
	 EOF 
;

// Rule CompareExp
ruleCompareExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCompareExpAccess().getGroup()); }
		(rule__CompareExp__Group__0)
		{ after(grammarAccess.getCompareExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBasicJudge
entryRuleBasicJudge
:
{ before(grammarAccess.getBasicJudgeRule()); }
	 ruleBasicJudge
{ after(grammarAccess.getBasicJudgeRule()); } 
	 EOF 
;

// Rule BasicJudge
ruleBasicJudge 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBasicJudgeAccess().getAlternatives()); }
		(rule__BasicJudge__Alternatives)
		{ after(grammarAccess.getBasicJudgeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleJudgeExp
entryRuleJudgeExp
:
{ before(grammarAccess.getJudgeExpRule()); }
	 ruleJudgeExp
{ after(grammarAccess.getJudgeExpRule()); } 
	 EOF 
;

// Rule JudgeExp
ruleJudgeExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getJudgeExpAccess().getGroup()); }
		(rule__JudgeExp__Group__0)
		{ after(grammarAccess.getJudgeExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleNewExp
entryRuleNewExp
:
{ before(grammarAccess.getNewExpRule()); }
	 ruleNewExp
{ after(grammarAccess.getNewExpRule()); } 
	 EOF 
;

// Rule NewExp
ruleNewExp 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNewExpAccess().getGroup()); }
		(rule__NewExp__Group__0)
		{ after(grammarAccess.getNewExpAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleExpression
entryRuleExpression
:
{ before(grammarAccess.getExpressionRule()); }
	 ruleExpression
{ after(grammarAccess.getExpressionRule()); } 
	 EOF 
;

// Rule Expression
ruleExpression 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getExpressionAccess().getAlternatives()); }
		(rule__Expression__Alternatives)
		{ after(grammarAccess.getExpressionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Domain
ruleDomain
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainAccess().getAlternatives()); }
		(rule__Domain__Alternatives)
		{ after(grammarAccess.getDomainAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ExtraAttr
ruleExtraAttr
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtraAttrAccess().getAlternatives()); }
		(rule__ExtraAttr__Alternatives)
		{ after(grammarAccess.getExtraAttrAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule BooleanExp
ruleBooleanExp
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpAccess().getAlternatives()); }
		(rule__BooleanExp__Alternatives)
		{ after(grammarAccess.getBooleanExpAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantValue__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantValueAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getConstantValueAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantValueAccess().getINTTerminalRuleCall_1()); }
		RULE_INT
		{ after(grammarAccess.getConstantValueAccess().getINTTerminalRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstantValueAccess().getDoubleLiteralParserRuleCall_2()); }
		ruleDoubleLiteral
		{ after(grammarAccess.getConstantValueAccess().getDoubleLiteralParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicDataType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicDataTypeAccess().getIntKeyword_0()); }
		'int'
		{ after(grammarAccess.getBasicDataTypeAccess().getIntKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicDataTypeAccess().getBooleanKeyword_1()); }
		'boolean'
		{ after(grammarAccess.getBasicDataTypeAccess().getBooleanKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getBasicDataTypeAccess().getDoubleKeyword_2()); }
		'double'
		{ after(grammarAccess.getBasicDataTypeAccess().getDoubleKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getBasicDataTypeAccess().getCharKeyword_3()); }
		'char'
		{ after(grammarAccess.getBasicDataTypeAccess().getCharKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getBasicDataTypeAccess().getLongKeyword_4()); }
		'long'
		{ after(grammarAccess.getBasicDataTypeAccess().getLongKeyword_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getBasicDataTypeParserRuleCall_0()); }
		ruleBasicDataType
		{ after(grammarAccess.getDataTypeAccess().getBasicDataTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getQualifiedNameParserRuleCall_1()); }
		ruleQualifiedName
		{ after(grammarAccess.getDataTypeAccess().getQualifiedNameParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getGroup_2()); }
		(rule__DataType__Group_2__0)
		{ after(grammarAccess.getDataTypeAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnTypeAccess().getDataTypeParserRuleCall_0()); }
		ruleDataType
		{ after(grammarAccess.getReturnTypeAccess().getDataTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getReturnTypeAccess().getVoidKeyword_1()); }
		'void'
		{ after(grammarAccess.getReturnTypeAccess().getVoidKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Member__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMemberAccess().getVariableDeclParserRuleCall_0()); }
		ruleVariableDecl
		{ after(grammarAccess.getMemberAccess().getVariableDeclParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getMemberAccess().getMethodDeclParserRuleCall_1()); }
		ruleMethodDecl
		{ after(grammarAccess.getMemberAccess().getMethodDeclParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getVarDefAssignment_0()); }
		(rule__Statement__VarDefAssignment_0)
		{ after(grammarAccess.getStatementAccess().getVarDefAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getAssignAssignment_1()); }
		(rule__Statement__AssignAssignment_1)
		{ after(grammarAccess.getStatementAccess().getAssignAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getIfStatAssignment_2()); }
		(rule__Statement__IfStatAssignment_2)
		{ after(grammarAccess.getStatementAccess().getIfStatAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getWhileStatAssignment_3()); }
		(rule__Statement__WhileStatAssignment_3)
		{ after(grammarAccess.getStatementAccess().getWhileStatAssignment_3()); }
	)
	|
	(
		{ before(grammarAccess.getStatementAccess().getRetStatAssignment_4()); }
		(rule__Statement__RetStatAssignment_4)
		{ after(grammarAccess.getStatementAccess().getRetStatAssignment_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LValueExp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLValueExpAccess().getIdAssignment_0()); }
		(rule__LValueExp__IdAssignment_0)
		{ after(grammarAccess.getLValueExpAccess().getIdAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getLValueExpAccess().getGroup_1()); }
		(rule__LValueExp__Group_1__0)
		{ after(grammarAccess.getLValueExpAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getLValueExpAccess().getGroup_2()); }
		(rule__LValueExp__Group_2__0)
		{ after(grammarAccess.getLValueExpAccess().getGroup_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Operator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOperatorAccess().getExclamationMarkKeyword_0()); }
		'!'
		{ after(grammarAccess.getOperatorAccess().getExclamationMarkKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getAmpersandKeyword_1()); }
		'&'
		{ after(grammarAccess.getOperatorAccess().getAmpersandKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getVerticalLineKeyword_2()); }
		'|'
		{ after(grammarAccess.getOperatorAccess().getVerticalLineKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getPlusSignKeyword_3()); }
		'+'
		{ after(grammarAccess.getOperatorAccess().getPlusSignKeyword_3()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getHyphenMinusKeyword_4()); }
		'-'
		{ after(grammarAccess.getOperatorAccess().getHyphenMinusKeyword_4()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getAsteriskKeyword_5()); }
		'*'
		{ after(grammarAccess.getOperatorAccess().getAsteriskKeyword_5()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getPercentSignKeyword_6()); }
		'%'
		{ after(grammarAccess.getOperatorAccess().getPercentSignKeyword_6()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getLessThanSignLessThanSignKeyword_7()); }
		'<<'
		{ after(grammarAccess.getOperatorAccess().getLessThanSignLessThanSignKeyword_7()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getGreaterThanSignGreaterThanSignKeyword_8()); }
		'>>'
		{ after(grammarAccess.getOperatorAccess().getGreaterThanSignGreaterThanSignKeyword_8()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getEqualsSignEqualsSignKeyword_9()); }
		'=='
		{ after(grammarAccess.getOperatorAccess().getEqualsSignEqualsSignKeyword_9()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getExclamationMarkEqualsSignKeyword_10()); }
		'!='
		{ after(grammarAccess.getOperatorAccess().getExclamationMarkEqualsSignKeyword_10()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getGreaterThanSignEqualsSignKeyword_11()); }
		'>='
		{ after(grammarAccess.getOperatorAccess().getGreaterThanSignEqualsSignKeyword_11()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getLessThanSignEqualsSignKeyword_12()); }
		'<='
		{ after(grammarAccess.getOperatorAccess().getLessThanSignEqualsSignKeyword_12()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getGreaterThanSignKeyword_13()); }
		'>'
		{ after(grammarAccess.getOperatorAccess().getGreaterThanSignKeyword_13()); }
	)
	|
	(
		{ before(grammarAccess.getOperatorAccess().getLessThanSignKeyword_14()); }
		'<'
		{ after(grammarAccess.getOperatorAccess().getLessThanSignKeyword_14()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CalcExp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalcExpAccess().getLeftNameAssignment_0()); }
		(rule__CalcExp__LeftNameAssignment_0)
		{ after(grammarAccess.getCalcExpAccess().getLeftNameAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getCalcExpAccess().getGroup_1()); }
		(rule__CalcExp__Group_1__0)
		{ after(grammarAccess.getCalcExpAccess().getGroup_1()); }
	)
	|
	(
		{ before(grammarAccess.getCalcExpAccess().getRightNumAssignment_2()); }
		(rule__CalcExp__RightNumAssignment_2)
		{ after(grammarAccess.getCalcExpAccess().getRightNumAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicJudge__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicJudgeAccess().getBEAssignment_0()); }
		(rule__BasicJudge__BEAssignment_0)
		{ after(grammarAccess.getBasicJudgeAccess().getBEAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getBasicJudgeAccess().getCmpAssignment_1()); }
		(rule__BasicJudge__CmpAssignment_1)
		{ after(grammarAccess.getBasicJudgeAccess().getCmpAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getConstAssignment_0()); }
		(rule__Expression__ConstAssignment_0)
		{ after(grammarAccess.getExpressionAccess().getConstAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getCeAssignment_1()); }
		(rule__Expression__CeAssignment_1)
		{ after(grammarAccess.getExpressionAccess().getCeAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getJeAssignment_2()); }
		(rule__Expression__JeAssignment_2)
		{ after(grammarAccess.getExpressionAccess().getJeAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getExpressionAccess().getNeAssignment_3()); }
		(rule__Expression__NeAssignment_3)
		{ after(grammarAccess.getExpressionAccess().getNeAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Domain__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainAccess().getPUBLICEnumLiteralDeclaration_0()); }
		('public')
		{ after(grammarAccess.getDomainAccess().getPUBLICEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDomainAccess().getPRIVATEEnumLiteralDeclaration_1()); }
		('private')
		{ after(grammarAccess.getDomainAccess().getPRIVATEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getDomainAccess().getPROTECTEDEnumLiteralDeclaration_2()); }
		('protected')
		{ after(grammarAccess.getDomainAccess().getPROTECTEDEnumLiteralDeclaration_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ExtraAttr__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExtraAttrAccess().getSTATICEnumLiteralDeclaration_0()); }
		('static')
		{ after(grammarAccess.getExtraAttrAccess().getSTATICEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getExtraAttrAccess().getABSTRACTEnumLiteralDeclaration_1()); }
		('abstract')
		{ after(grammarAccess.getExtraAttrAccess().getABSTRACTEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanExpAccess().getTRUEEnumLiteralDeclaration_0()); }
		('true')
		{ after(grammarAccess.getBooleanExpAccess().getTRUEEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getBooleanExpAccess().getFALSEEnumLiteralDeclaration_1()); }
		('false')
		{ after(grammarAccess.getBooleanExpAccess().getFALSEEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MiniJava__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MiniJava__Group__0__Impl
	rule__MiniJava__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MiniJava__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMiniJavaAccess().getPackageAssignment_0()); }
	(rule__MiniJava__PackageAssignment_0)
	{ after(grammarAccess.getMiniJavaAccess().getPackageAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MiniJava__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MiniJava__Group__1__Impl
	rule__MiniJava__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MiniJava__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMiniJavaAccess().getImportsAssignment_1()); }
	(rule__MiniJava__ImportsAssignment_1)*
	{ after(grammarAccess.getMiniJavaAccess().getImportsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MiniJava__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MiniJava__Group__2__Impl
	rule__MiniJava__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MiniJava__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMiniJavaAccess().getMainclassAssignment_2()); }
	(rule__MiniJava__MainclassAssignment_2)
	{ after(grammarAccess.getMiniJavaAccess().getMainclassAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MiniJava__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MiniJava__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MiniJava__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMiniJavaAccess().getClassesAssignment_3()); }
	(rule__MiniJava__ClassesAssignment_3)*
	{ after(grammarAccess.getMiniJavaAccess().getClassesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDecl__Group__0__Impl
	rule__PackageDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclAccess().getPackageKeyword_0()); }
	'package'
	{ after(grammarAccess.getPackageDeclAccess().getPackageKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDecl__Group__1__Impl
	rule__PackageDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclAccess().getNameAssignment_1()); }
	(rule__PackageDecl__NameAssignment_1)
	{ after(grammarAccess.getPackageDeclAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PackageDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPackageDeclAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getPackageDeclAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group__0__Impl
	rule__ImportDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getImportKeyword_0()); }
	'import'
	{ after(grammarAccess.getImportDeclAccess().getImportKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group__1__Impl
	rule__ImportDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getAnchorAssignment_1()); }
	(rule__ImportDecl__AnchorAssignment_1)
	{ after(grammarAccess.getImportDeclAccess().getAnchorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportDecl__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportDeclAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getImportDeclAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MainClassDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainClassDecl__Group__0__Impl
	rule__MainClassDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainClassDeclAccess().getMainClassDeclAction_0()); }
	()
	{ after(grammarAccess.getMainClassDeclAccess().getMainClassDeclAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainClassDecl__Group__1__Impl
	rule__MainClassDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainClassDeclAccess().getClassKeyword_1()); }
	'class'
	{ after(grammarAccess.getMainClassDeclAccess().getClassKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainClassDecl__Group__2__Impl
	rule__MainClassDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainClassDeclAccess().getIDTerminalRuleCall_2()); }
	RULE_ID
	{ after(grammarAccess.getMainClassDeclAccess().getIDTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainClassDecl__Group__3__Impl
	rule__MainClassDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainClassDeclAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getMainClassDeclAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainClassDecl__Group__4__Impl
	rule__MainClassDecl__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainClassDeclAccess().getPublicKeyword_4()); }
	'public'
	{ after(grammarAccess.getMainClassDeclAccess().getPublicKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainClassDecl__Group__5__Impl
	rule__MainClassDecl__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainClassDeclAccess().getStaticKeyword_5()); }
	'static'
	{ after(grammarAccess.getMainClassDeclAccess().getStaticKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainClassDecl__Group__6__Impl
	rule__MainClassDecl__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainClassDeclAccess().getVoidKeyword_6()); }
	'void'
	{ after(grammarAccess.getMainClassDeclAccess().getVoidKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainClassDecl__Group__7__Impl
	rule__MainClassDecl__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainClassDeclAccess().getMainKeyword_7()); }
	'main'
	{ after(grammarAccess.getMainClassDeclAccess().getMainKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainClassDecl__Group__8__Impl
	rule__MainClassDecl__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainClassDeclAccess().getLeftParenthesisKeyword_8()); }
	'('
	{ after(grammarAccess.getMainClassDeclAccess().getLeftParenthesisKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainClassDecl__Group__9__Impl
	rule__MainClassDecl__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainClassDeclAccess().getStringKeyword_9()); }
	'String'
	{ after(grammarAccess.getMainClassDeclAccess().getStringKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__10
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainClassDecl__Group__10__Impl
	rule__MainClassDecl__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__10__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainClassDeclAccess().getLeftSquareBracketKeyword_10()); }
	'['
	{ after(grammarAccess.getMainClassDeclAccess().getLeftSquareBracketKeyword_10()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__11
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainClassDecl__Group__11__Impl
	rule__MainClassDecl__Group__12
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__11__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainClassDeclAccess().getRightSquareBracketKeyword_11()); }
	']'
	{ after(grammarAccess.getMainClassDeclAccess().getRightSquareBracketKeyword_11()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__12
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainClassDecl__Group__12__Impl
	rule__MainClassDecl__Group__13
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__12__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainClassDeclAccess().getNameAssignment_12()); }
	(rule__MainClassDecl__NameAssignment_12)
	{ after(grammarAccess.getMainClassDeclAccess().getNameAssignment_12()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__13
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainClassDecl__Group__13__Impl
	rule__MainClassDecl__Group__14
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__13__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainClassDeclAccess().getRightParenthesisKeyword_13()); }
	')'
	{ after(grammarAccess.getMainClassDeclAccess().getRightParenthesisKeyword_13()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__14
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainClassDecl__Group__14__Impl
	rule__MainClassDecl__Group__15
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__14__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainClassDeclAccess().getLeftCurlyBracketKeyword_14()); }
	'{'
	{ after(grammarAccess.getMainClassDeclAccess().getLeftCurlyBracketKeyword_14()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__15
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainClassDecl__Group__15__Impl
	rule__MainClassDecl__Group__16
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__15__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainClassDeclAccess().getStatementsAssignment_15()); }
	(rule__MainClassDecl__StatementsAssignment_15)*
	{ after(grammarAccess.getMainClassDeclAccess().getStatementsAssignment_15()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__16
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainClassDecl__Group__16__Impl
	rule__MainClassDecl__Group__17
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__16__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainClassDeclAccess().getRightCurlyBracketKeyword_16()); }
	'}'
	{ after(grammarAccess.getMainClassDeclAccess().getRightCurlyBracketKeyword_16()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__17
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MainClassDecl__Group__17__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__Group__17__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMainClassDeclAccess().getRightCurlyBracketKeyword_17()); }
	'}'
	{ after(grammarAccess.getMainClassDeclAccess().getRightCurlyBracketKeyword_17()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDecl__Group__0__Impl
	rule__ClassDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclAccess().getClassKeyword_0()); }
	'class'
	{ after(grammarAccess.getClassDeclAccess().getClassKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDecl__Group__1__Impl
	rule__ClassDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclAccess().getNameAssignment_1()); }
	(rule__ClassDecl__NameAssignment_1)
	{ after(grammarAccess.getClassDeclAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDecl__Group__2__Impl
	rule__ClassDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclAccess().getGroup_2()); }
	(rule__ClassDecl__Group_2__0)?
	{ after(grammarAccess.getClassDeclAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDecl__Group__3__Impl
	rule__ClassDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclAccess().getGroup_3()); }
	(rule__ClassDecl__Group_3__0)?
	{ after(grammarAccess.getClassDeclAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDecl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDecl__Group__4__Impl
	rule__ClassDecl__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDecl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getClassDeclAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDecl__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDecl__Group__5__Impl
	rule__ClassDecl__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDecl__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclAccess().getMembersAssignment_5()); }
	(rule__ClassDecl__MembersAssignment_5)*
	{ after(grammarAccess.getClassDeclAccess().getMembersAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDecl__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDecl__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDecl__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getClassDeclAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDecl__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDecl__Group_2__0__Impl
	rule__ClassDecl__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDecl__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclAccess().getExtendsKeyword_2_0()); }
	'extends'
	{ after(grammarAccess.getClassDeclAccess().getExtendsKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDecl__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDecl__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDecl__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclAccess().getSuperClassAssignment_2_1()); }
	(rule__ClassDecl__SuperClassAssignment_2_1)
	{ after(grammarAccess.getClassDeclAccess().getSuperClassAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ClassDecl__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDecl__Group_3__0__Impl
	rule__ClassDecl__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDecl__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclAccess().getImplementsKeyword_3_0()); }
	'implements'
	{ after(grammarAccess.getClassDeclAccess().getImplementsKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDecl__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ClassDecl__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDecl__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClassDeclAccess().getImplementzAssignment_3_1()); }
	(rule__ClassDecl__ImplementzAssignment_3_1)
	{ after(grammarAccess.getClassDeclAccess().getImplementzAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
	(rule__QualifiedName__Group_1__0)*
	{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
	'.'
	{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
	{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DoubleLiteral__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoubleLiteral__Group__0__Impl
	rule__DoubleLiteral__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleLiteral__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleLiteralAccess().getINTTerminalRuleCall_0()); }
	RULE_INT
	{ after(grammarAccess.getDoubleLiteralAccess().getINTTerminalRuleCall_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleLiteral__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoubleLiteral__Group__1__Impl
	rule__DoubleLiteral__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleLiteral__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleLiteralAccess().getFullStopKeyword_1()); }
	'.'
	{ after(grammarAccess.getDoubleLiteralAccess().getFullStopKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleLiteral__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoubleLiteral__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleLiteral__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleLiteralAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getDoubleLiteralAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataType__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_2__0__Impl
	rule__DataType__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getBasicDataTypeParserRuleCall_2_0()); }
	ruleBasicDataType
	{ after(grammarAccess.getDataTypeAccess().getBasicDataTypeParserRuleCall_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_2__1__Impl
	rule__DataType__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getLeftSquareBracketKeyword_2_1()); }
	'['
	{ after(grammarAccess.getDataTypeAccess().getLeftSquareBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataType__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataTypeAccess().getRightSquareBracketKeyword_2_2()); }
	']'
	{ after(grammarAccess.getDataTypeAccess().getRightSquareBracketKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDecl__Group__0__Impl
	rule__VariableDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclAccess().getVarTypeAssignment_0()); }
	(rule__VariableDecl__VarTypeAssignment_0)
	{ after(grammarAccess.getVariableDeclAccess().getVarTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDecl__Group__1__Impl
	rule__VariableDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclAccess().getNameAssignment_1()); }
	(rule__VariableDecl__NameAssignment_1)
	{ after(grammarAccess.getVariableDeclAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDecl__Group__2__Impl
	rule__VariableDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclAccess().getEqualsSignKeyword_2()); }
	('=')?
	{ after(grammarAccess.getVariableDeclAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDecl__Group__3__Impl
	rule__VariableDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclAccess().getValueAssignment_3()); }
	(rule__VariableDecl__ValueAssignment_3)?
	{ after(grammarAccess.getVariableDeclAccess().getValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__VariableDecl__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableDeclAccess().getSemicolonKeyword_4()); }
	';'
	{ after(grammarAccess.getVariableDeclAccess().getSemicolonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getTypeAssignment_0()); }
	(rule__Parameter__TypeAssignment_0)
	{ after(grammarAccess.getParameterAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getNameAssignment_1()); }
	(rule__Parameter__NameAssignment_1)
	{ after(grammarAccess.getParameterAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Parameter__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getParameterAccess().getCommaKeyword_2()); }
	(',')?
	{ after(grammarAccess.getParameterAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MethodDecl__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__0__Impl
	rule__MethodDecl__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getDomainAssignment_0()); }
	(rule__MethodDecl__DomainAssignment_0)
	{ after(grammarAccess.getMethodDeclAccess().getDomainAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__1__Impl
	rule__MethodDecl__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getExtraAssignment_1()); }
	(rule__MethodDecl__ExtraAssignment_1)?
	{ after(grammarAccess.getMethodDeclAccess().getExtraAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__2__Impl
	rule__MethodDecl__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getRetTypeAssignment_2()); }
	(rule__MethodDecl__RetTypeAssignment_2)
	{ after(grammarAccess.getMethodDeclAccess().getRetTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__3__Impl
	rule__MethodDecl__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getNameAssignment_3()); }
	(rule__MethodDecl__NameAssignment_3)
	{ after(grammarAccess.getMethodDeclAccess().getNameAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__4__Impl
	rule__MethodDecl__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getMethodDeclAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__5__Impl
	rule__MethodDecl__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getParamsAssignment_5()); }
	(rule__MethodDecl__ParamsAssignment_5)*
	{ after(grammarAccess.getMethodDeclAccess().getParamsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__6__Impl
	rule__MethodDecl__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getMethodDeclAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__7__Impl
	rule__MethodDecl__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getLeftCurlyBracketKeyword_7()); }
	'{'
	{ after(grammarAccess.getMethodDeclAccess().getLeftCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__8__Impl
	rule__MethodDecl__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getStatementsAssignment_8()); }
	(rule__MethodDecl__StatementsAssignment_8)*
	{ after(grammarAccess.getMethodDeclAccess().getStatementsAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MethodDecl__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMethodDeclAccess().getRightCurlyBracketKeyword_9()); }
	'}'
	{ after(grammarAccess.getMethodDeclAccess().getRightCurlyBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LValueExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LValueExp__Group_1__0__Impl
	rule__LValueExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LValueExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLValueExpAccess().getExpAssignment_1_0()); }
	(rule__LValueExp__ExpAssignment_1_0)
	{ after(grammarAccess.getLValueExpAccess().getExpAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LValueExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LValueExp__Group_1__1__Impl
	rule__LValueExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LValueExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLValueExpAccess().getFullStopKeyword_1_1()); }
	'.'
	{ after(grammarAccess.getLValueExpAccess().getFullStopKeyword_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LValueExp__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LValueExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LValueExp__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLValueExpAccess().getIdAssignment_1_2()); }
	(rule__LValueExp__IdAssignment_1_2)
	{ after(grammarAccess.getLValueExpAccess().getIdAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__LValueExp__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LValueExp__Group_2__0__Impl
	rule__LValueExp__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__LValueExp__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLValueExpAccess().getExpAssignment_2_0()); }
	(rule__LValueExp__ExpAssignment_2_0)
	{ after(grammarAccess.getLValueExpAccess().getExpAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LValueExp__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LValueExp__Group_2__1__Impl
	rule__LValueExp__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__LValueExp__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLValueExpAccess().getLeftSquareBracketKeyword_2_1()); }
	'['
	{ after(grammarAccess.getLValueExpAccess().getLeftSquareBracketKeyword_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LValueExp__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LValueExp__Group_2__2__Impl
	rule__LValueExp__Group_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__LValueExp__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLValueExpAccess().getIndexAssignment_2_2()); }
	(rule__LValueExp__IndexAssignment_2_2)
	{ after(grammarAccess.getLValueExpAccess().getIndexAssignment_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__LValueExp__Group_2__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__LValueExp__Group_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__LValueExp__Group_2__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getLValueExpAccess().getRightSquareBracketKeyword_2_3()); }
	']'
	{ after(grammarAccess.getLValueExpAccess().getRightSquareBracketKeyword_2_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Assignments__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignments__Group__0__Impl
	rule__Assignments__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignments__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentsAccess().getLeftValueAssignment_0()); }
	(rule__Assignments__LeftValueAssignment_0)
	{ after(grammarAccess.getAssignmentsAccess().getLeftValueAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignments__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignments__Group__1__Impl
	rule__Assignments__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignments__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentsAccess().getEqualsSignKeyword_1()); }
	'='
	{ after(grammarAccess.getAssignmentsAccess().getEqualsSignKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignments__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignments__Group__2__Impl
	rule__Assignments__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignments__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentsAccess().getExpressionAssignment_2()); }
	(rule__Assignments__ExpressionAssignment_2)
	{ after(grammarAccess.getAssignmentsAccess().getExpressionAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignments__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Assignments__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignments__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAssignmentsAccess().getSemicolonKeyword_3()); }
	';'
	{ after(grammarAccess.getAssignmentsAccess().getSemicolonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IfStatements__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatements__Group__0__Impl
	rule__IfStatements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatements__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementsAccess().getIfKeyword_0()); }
	'if'
	{ after(grammarAccess.getIfStatementsAccess().getIfKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatements__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatements__Group__1__Impl
	rule__IfStatements__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatements__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementsAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getIfStatementsAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatements__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatements__Group__2__Impl
	rule__IfStatements__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatements__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementsAccess().getExpressionParserRuleCall_2()); }
	ruleExpression
	{ after(grammarAccess.getIfStatementsAccess().getExpressionParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatements__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatements__Group__3__Impl
	rule__IfStatements__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatements__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementsAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getIfStatementsAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatements__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatements__Group__4__Impl
	rule__IfStatements__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatements__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementsAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getIfStatementsAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatements__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatements__Group__5__Impl
	rule__IfStatements__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatements__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementsAccess().getStatementsAssignment_5()); }
	(rule__IfStatements__StatementsAssignment_5)*
	{ after(grammarAccess.getIfStatementsAccess().getStatementsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatements__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatements__Group__6__Impl
	rule__IfStatements__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatements__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementsAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getIfStatementsAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatements__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatements__Group__7__Impl
	rule__IfStatements__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatements__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementsAccess().getElseIfAssignment_7()); }
	(rule__IfStatements__ElseIfAssignment_7)*
	{ after(grammarAccess.getIfStatementsAccess().getElseIfAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatements__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IfStatements__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatements__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIfStatementsAccess().getElseAssignment_8()); }
	(rule__IfStatements__ElseAssignment_8)*
	{ after(grammarAccess.getIfStatementsAccess().getElseAssignment_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseIfStatements__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIfStatements__Group__0__Impl
	rule__ElseIfStatements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfStatements__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfStatementsAccess().getElseKeyword_0()); }
	'else'
	{ after(grammarAccess.getElseIfStatementsAccess().getElseKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfStatements__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIfStatements__Group__1__Impl
	rule__ElseIfStatements__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfStatements__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfStatementsAccess().getIfKeyword_1()); }
	'if'
	{ after(grammarAccess.getElseIfStatementsAccess().getIfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfStatements__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIfStatements__Group__2__Impl
	rule__ElseIfStatements__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfStatements__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfStatementsAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getElseIfStatementsAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfStatements__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIfStatements__Group__3__Impl
	rule__ElseIfStatements__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfStatements__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfStatementsAccess().getExpressionParserRuleCall_3()); }
	ruleExpression
	{ after(grammarAccess.getElseIfStatementsAccess().getExpressionParserRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfStatements__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIfStatements__Group__4__Impl
	rule__ElseIfStatements__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfStatements__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfStatementsAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getElseIfStatementsAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfStatements__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIfStatements__Group__5__Impl
	rule__ElseIfStatements__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfStatements__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfStatementsAccess().getLeftCurlyBracketKeyword_5()); }
	'{'
	{ after(grammarAccess.getElseIfStatementsAccess().getLeftCurlyBracketKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfStatements__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIfStatements__Group__6__Impl
	rule__ElseIfStatements__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfStatements__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfStatementsAccess().getStatementsAssignment_6()); }
	(rule__ElseIfStatements__StatementsAssignment_6)*
	{ after(grammarAccess.getElseIfStatementsAccess().getStatementsAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfStatements__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseIfStatements__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfStatements__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseIfStatementsAccess().getRightCurlyBracketKeyword_7()); }
	'}'
	{ after(grammarAccess.getElseIfStatementsAccess().getRightCurlyBracketKeyword_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ElseStatement__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseStatement__Group__0__Impl
	rule__ElseStatement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseStatement__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseStatementAccess().getElseStatementAction_0()); }
	()
	{ after(grammarAccess.getElseStatementAccess().getElseStatementAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseStatement__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseStatement__Group__1__Impl
	rule__ElseStatement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseStatement__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseStatementAccess().getElseKeyword_1()); }
	'else'
	{ after(grammarAccess.getElseStatementAccess().getElseKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseStatement__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseStatement__Group__2__Impl
	rule__ElseStatement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseStatement__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseStatementAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getElseStatementAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseStatement__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseStatement__Group__3__Impl
	rule__ElseStatement__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseStatement__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseStatementAccess().getStatementsAssignment_3()); }
	(rule__ElseStatement__StatementsAssignment_3)*
	{ after(grammarAccess.getElseStatementAccess().getStatementsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseStatement__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ElseStatement__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseStatement__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElseStatementAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getElseStatementAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__WhileStatements__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatements__Group__0__Impl
	rule__WhileStatements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatements__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementsAccess().getWhileKeyword_0()); }
	'while'
	{ after(grammarAccess.getWhileStatementsAccess().getWhileKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatements__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatements__Group__1__Impl
	rule__WhileStatements__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatements__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementsAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getWhileStatementsAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatements__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatements__Group__2__Impl
	rule__WhileStatements__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatements__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementsAccess().getExpressionParserRuleCall_2()); }
	ruleExpression
	{ after(grammarAccess.getWhileStatementsAccess().getExpressionParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatements__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatements__Group__3__Impl
	rule__WhileStatements__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatements__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementsAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getWhileStatementsAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatements__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatements__Group__4__Impl
	rule__WhileStatements__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatements__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementsAccess().getLeftCurlyBracketKeyword_4()); }
	'{'
	{ after(grammarAccess.getWhileStatementsAccess().getLeftCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatements__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatements__Group__5__Impl
	rule__WhileStatements__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatements__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementsAccess().getStatementsAssignment_5()); }
	(rule__WhileStatements__StatementsAssignment_5)*
	{ after(grammarAccess.getWhileStatementsAccess().getStatementsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatements__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__WhileStatements__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatements__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getWhileStatementsAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getWhileStatementsAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ReturnStatements__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatements__Group__0__Impl
	rule__ReturnStatements__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatements__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementsAccess().getReturnKeyword_0()); }
	'return'
	{ after(grammarAccess.getReturnStatementsAccess().getReturnKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatements__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatements__Group__1__Impl
	rule__ReturnStatements__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatements__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementsAccess().getExpAssignment_1()); }
	(rule__ReturnStatements__ExpAssignment_1)
	{ after(grammarAccess.getReturnStatementsAccess().getExpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatements__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ReturnStatements__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatements__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getReturnStatementsAccess().getSemicolonKeyword_2()); }
	';'
	{ after(grammarAccess.getReturnStatementsAccess().getSemicolonKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CalcExp__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CalcExp__Group_1__0__Impl
	rule__CalcExp__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CalcExp__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalcExpAccess().getLeftNumAssignment_1_0()); }
	(rule__CalcExp__LeftNumAssignment_1_0)
	{ after(grammarAccess.getCalcExpAccess().getLeftNumAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CalcExp__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CalcExp__Group_1__1__Impl
	rule__CalcExp__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CalcExp__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalcExpAccess().getOpAssignment_1_1()); }
	(rule__CalcExp__OpAssignment_1_1)
	{ after(grammarAccess.getCalcExpAccess().getOpAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CalcExp__Group_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CalcExp__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CalcExp__Group_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCalcExpAccess().getRightNameAssignment_1_2()); }
	(rule__CalcExp__RightNameAssignment_1_2)
	{ after(grammarAccess.getCalcExpAccess().getRightNameAssignment_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__CompareExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareExp__Group__0__Impl
	rule__CompareExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareExpAccess().getIdAssignment_0()); }
	(rule__CompareExp__IdAssignment_0)
	{ after(grammarAccess.getCompareExpAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareExp__Group__1__Impl
	rule__CompareExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareExpAccess().getOpAssignment_1()); }
	(rule__CompareExp__OpAssignment_1)
	{ after(grammarAccess.getCompareExpAccess().getOpAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareExp__Group__2__Impl
	rule__CompareExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareExpAccess().getOther1Assignment_2()); }
	(rule__CompareExp__Other1Assignment_2)*
	{ after(grammarAccess.getCompareExpAccess().getOther1Assignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__CompareExp__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCompareExpAccess().getOther2Assignment_3()); }
	(rule__CompareExp__Other2Assignment_3)*
	{ after(grammarAccess.getCompareExpAccess().getOther2Assignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__JudgeExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JudgeExp__Group__0__Impl
	rule__JudgeExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__JudgeExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJudgeExpAccess().getExclamationMarkKeyword_0()); }
	('!')*
	{ after(grammarAccess.getJudgeExpAccess().getExclamationMarkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JudgeExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JudgeExp__Group__1__Impl
	rule__JudgeExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__JudgeExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJudgeExpAccess().getLeftParenthesisKeyword_1()); }
	('(')*
	{ after(grammarAccess.getJudgeExpAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JudgeExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JudgeExp__Group__2__Impl
	rule__JudgeExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__JudgeExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJudgeExpAccess().getBjAssignment_2()); }
	(rule__JudgeExp__BjAssignment_2)
	{ after(grammarAccess.getJudgeExpAccess().getBjAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__JudgeExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__JudgeExp__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__JudgeExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getJudgeExpAccess().getRightParenthesisKeyword_3()); }
	(')')*
	{ after(grammarAccess.getJudgeExpAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NewExp__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewExp__Group__0__Impl
	rule__NewExp__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NewExp__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewExpAccess().getNewKeyword_0()); }
	'new'
	{ after(grammarAccess.getNewExpAccess().getNewKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewExp__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewExp__Group__1__Impl
	rule__NewExp__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NewExp__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewExpAccess().getNameAssignment_1()); }
	(rule__NewExp__NameAssignment_1)
	{ after(grammarAccess.getNewExpAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewExp__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewExp__Group__2__Impl
	rule__NewExp__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NewExp__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewExpAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getNewExpAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewExp__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewExp__Group__3__Impl
	rule__NewExp__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NewExp__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewExpAccess().getParamsAssignment_3()); }
	(rule__NewExp__ParamsAssignment_3)*
	{ after(grammarAccess.getNewExpAccess().getParamsAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewExp__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NewExp__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NewExp__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNewExpAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getNewExpAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MiniJava__PackageAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMiniJavaAccess().getPackagePackageDeclParserRuleCall_0_0()); }
		rulePackageDecl
		{ after(grammarAccess.getMiniJavaAccess().getPackagePackageDeclParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MiniJava__ImportsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMiniJavaAccess().getImportsImportDeclParserRuleCall_1_0()); }
		ruleImportDecl
		{ after(grammarAccess.getMiniJavaAccess().getImportsImportDeclParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MiniJava__MainclassAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMiniJavaAccess().getMainclassMainClassDeclParserRuleCall_2_0()); }
		ruleMainClassDecl
		{ after(grammarAccess.getMiniJavaAccess().getMainclassMainClassDeclParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MiniJava__ClassesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMiniJavaAccess().getClassesClassDeclParserRuleCall_3_0()); }
		ruleClassDecl
		{ after(grammarAccess.getMiniJavaAccess().getClassesClassDeclParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDecl__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPackageDeclAccess().getNameQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getPackageDeclAccess().getNameQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportDecl__AnchorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportDeclAccess().getAnchorQualifiedNameParserRuleCall_1_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getImportDeclAccess().getAnchorQualifiedNameParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__NameAssignment_12
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainClassDeclAccess().getNameIDTerminalRuleCall_12_0()); }
		RULE_ID
		{ after(grammarAccess.getMainClassDeclAccess().getNameIDTerminalRuleCall_12_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MainClassDecl__StatementsAssignment_15
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMainClassDeclAccess().getStatementsStatementParserRuleCall_15_0()); }
		ruleStatement
		{ after(grammarAccess.getMainClassDeclAccess().getStatementsStatementParserRuleCall_15_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDecl__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDeclAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getClassDeclAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDecl__SuperClassAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDeclAccess().getSuperClassClassDeclCrossReference_2_1_0()); }
		(
			{ before(grammarAccess.getClassDeclAccess().getSuperClassClassDeclQualifiedNameParserRuleCall_2_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getClassDeclAccess().getSuperClassClassDeclQualifiedNameParserRuleCall_2_1_0_1()); }
		)
		{ after(grammarAccess.getClassDeclAccess().getSuperClassClassDeclCrossReference_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDecl__ImplementzAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDeclAccess().getImplementzClassDeclCrossReference_3_1_0()); }
		(
			{ before(grammarAccess.getClassDeclAccess().getImplementzClassDeclQualifiedNameParserRuleCall_3_1_0_1()); }
			ruleQualifiedName
			{ after(grammarAccess.getClassDeclAccess().getImplementzClassDeclQualifiedNameParserRuleCall_3_1_0_1()); }
		)
		{ after(grammarAccess.getClassDeclAccess().getImplementzClassDeclCrossReference_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ClassDecl__MembersAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getClassDeclAccess().getMembersMemberParserRuleCall_5_0()); }
		ruleMember
		{ after(grammarAccess.getClassDeclAccess().getMembersMemberParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__VarTypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclAccess().getVarTypeDataTypeParserRuleCall_0_0()); }
		ruleDataType
		{ after(grammarAccess.getVariableDeclAccess().getVarTypeDataTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableDeclAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDecl__ValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableDeclAccess().getValueConstantValueParserRuleCall_3_0()); }
		ruleConstantValue
		{ after(grammarAccess.getVariableDeclAccess().getValueConstantValueParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getTypeDataTypeParserRuleCall_0_0()); }
		ruleDataType
		{ after(grammarAccess.getParameterAccess().getTypeDataTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getParameterAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__DomainAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclAccess().getDomainDomainEnumRuleCall_0_0()); }
		ruleDomain
		{ after(grammarAccess.getMethodDeclAccess().getDomainDomainEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__ExtraAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclAccess().getExtraExtraAttrEnumRuleCall_1_0()); }
		ruleExtraAttr
		{ after(grammarAccess.getMethodDeclAccess().getExtraExtraAttrEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__RetTypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclAccess().getRetTypeReturnTypeParserRuleCall_2_0()); }
		ruleReturnType
		{ after(grammarAccess.getMethodDeclAccess().getRetTypeReturnTypeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__NameAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclAccess().getNameIDTerminalRuleCall_3_0()); }
		RULE_ID
		{ after(grammarAccess.getMethodDeclAccess().getNameIDTerminalRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__ParamsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclAccess().getParamsParameterParserRuleCall_5_0()); }
		ruleParameter
		{ after(grammarAccess.getMethodDeclAccess().getParamsParameterParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodDecl__StatementsAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMethodDeclAccess().getStatementsStatementParserRuleCall_8_0()); }
		ruleStatement
		{ after(grammarAccess.getMethodDeclAccess().getStatementsStatementParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__VarDefAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getVarDefVariableDeclParserRuleCall_0_0()); }
		ruleVariableDecl
		{ after(grammarAccess.getStatementAccess().getVarDefVariableDeclParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__AssignAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getAssignAssignmentsParserRuleCall_1_0()); }
		ruleAssignments
		{ after(grammarAccess.getStatementAccess().getAssignAssignmentsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__IfStatAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getIfStatIfStatementsParserRuleCall_2_0()); }
		ruleIfStatements
		{ after(grammarAccess.getStatementAccess().getIfStatIfStatementsParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__WhileStatAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getWhileStatWhileStatementsParserRuleCall_3_0()); }
		ruleWhileStatements
		{ after(grammarAccess.getStatementAccess().getWhileStatWhileStatementsParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Statement__RetStatAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStatementAccess().getRetStatReturnStatementsParserRuleCall_4_0()); }
		ruleReturnStatements
		{ after(grammarAccess.getStatementAccess().getRetStatReturnStatementsParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LValueExp__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLValueExpAccess().getIdIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getLValueExpAccess().getIdIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LValueExp__ExpAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLValueExpAccess().getExpExpressionParserRuleCall_1_0_0()); }
		ruleExpression
		{ after(grammarAccess.getLValueExpAccess().getExpExpressionParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LValueExp__IdAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLValueExpAccess().getIdQualifiedNameParserRuleCall_1_2_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getLValueExpAccess().getIdQualifiedNameParserRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LValueExp__ExpAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLValueExpAccess().getExpExpressionParserRuleCall_2_0_0()); }
		ruleExpression
		{ after(grammarAccess.getLValueExpAccess().getExpExpressionParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__LValueExp__IndexAssignment_2_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getLValueExpAccess().getIndexExpressionParserRuleCall_2_2_0()); }
		ruleExpression
		{ after(grammarAccess.getLValueExpAccess().getIndexExpressionParserRuleCall_2_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignments__LeftValueAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentsAccess().getLeftValueLValueExpParserRuleCall_0_0()); }
		ruleLValueExp
		{ after(grammarAccess.getAssignmentsAccess().getLeftValueLValueExpParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Assignments__ExpressionAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAssignmentsAccess().getExpressionExpressionParserRuleCall_2_0()); }
		ruleExpression
		{ after(grammarAccess.getAssignmentsAccess().getExpressionExpressionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatements__StatementsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementsAccess().getStatementsStatementParserRuleCall_5_0()); }
		ruleStatement
		{ after(grammarAccess.getIfStatementsAccess().getStatementsStatementParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatements__ElseIfAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementsAccess().getElseIfElseIfStatementsParserRuleCall_7_0()); }
		ruleElseIfStatements
		{ after(grammarAccess.getIfStatementsAccess().getElseIfElseIfStatementsParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IfStatements__ElseAssignment_8
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIfStatementsAccess().getElseElseStatementParserRuleCall_8_0()); }
		ruleElseStatement
		{ after(grammarAccess.getIfStatementsAccess().getElseElseStatementParserRuleCall_8_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseIfStatements__StatementsAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseIfStatementsAccess().getStatementsStatementParserRuleCall_6_0()); }
		ruleStatement
		{ after(grammarAccess.getElseIfStatementsAccess().getStatementsStatementParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ElseStatement__StatementsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElseStatementAccess().getStatementsStatementParserRuleCall_3_0()); }
		ruleStatement
		{ after(grammarAccess.getElseStatementAccess().getStatementsStatementParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__WhileStatements__StatementsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getWhileStatementsAccess().getStatementsStatementParserRuleCall_5_0()); }
		ruleStatement
		{ after(grammarAccess.getWhileStatementsAccess().getStatementsStatementParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnStatements__ExpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getReturnStatementsAccess().getExpExpressionParserRuleCall_1_0()); }
		ruleExpression
		{ after(grammarAccess.getReturnStatementsAccess().getExpExpressionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CalcExp__LeftNameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalcExpAccess().getLeftNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getCalcExpAccess().getLeftNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CalcExp__LeftNumAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalcExpAccess().getLeftNumINTTerminalRuleCall_1_0_0()); }
		RULE_INT
		{ after(grammarAccess.getCalcExpAccess().getLeftNumINTTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CalcExp__OpAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalcExpAccess().getOpOperatorParserRuleCall_1_1_0()); }
		ruleOperator
		{ after(grammarAccess.getCalcExpAccess().getOpOperatorParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CalcExp__RightNameAssignment_1_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalcExpAccess().getRightNameIDTerminalRuleCall_1_2_0()); }
		RULE_ID
		{ after(grammarAccess.getCalcExpAccess().getRightNameIDTerminalRuleCall_1_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CalcExp__RightNumAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCalcExpAccess().getRightNumINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getCalcExpAccess().getRightNumINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExp__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareExpAccess().getIdQualifiedNameParserRuleCall_0_0()); }
		ruleQualifiedName
		{ after(grammarAccess.getCompareExpAccess().getIdQualifiedNameParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExp__OpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareExpAccess().getOpOperatorParserRuleCall_1_0()); }
		ruleOperator
		{ after(grammarAccess.getCompareExpAccess().getOpOperatorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExp__Other1Assignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareExpAccess().getOther1IDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getCompareExpAccess().getOther1IDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompareExp__Other2Assignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompareExpAccess().getOther2NullKeyword_3_0()); }
		(
			{ before(grammarAccess.getCompareExpAccess().getOther2NullKeyword_3_0()); }
			'null'
			{ after(grammarAccess.getCompareExpAccess().getOther2NullKeyword_3_0()); }
		)
		{ after(grammarAccess.getCompareExpAccess().getOther2NullKeyword_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicJudge__BEAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicJudgeAccess().getBEBooleanExpEnumRuleCall_0_0()); }
		ruleBooleanExp
		{ after(grammarAccess.getBasicJudgeAccess().getBEBooleanExpEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BasicJudge__CmpAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBasicJudgeAccess().getCmpCompareExpParserRuleCall_1_0()); }
		ruleCompareExp
		{ after(grammarAccess.getBasicJudgeAccess().getCmpCompareExpParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__JudgeExp__BjAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getJudgeExpAccess().getBjBasicJudgeParserRuleCall_2_0()); }
		ruleBasicJudge
		{ after(grammarAccess.getJudgeExpAccess().getBjBasicJudgeParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewExp__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNewExpAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getNewExpAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NewExp__ParamsAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNewExpAccess().getParamsParameterParserRuleCall_3_0()); }
		ruleParameter
		{ after(grammarAccess.getNewExpAccess().getParamsParameterParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__ConstAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getConstConstantValueParserRuleCall_0_0()); }
		ruleConstantValue
		{ after(grammarAccess.getExpressionAccess().getConstConstantValueParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__CeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getCeCalcExpParserRuleCall_1_0()); }
		ruleCalcExp
		{ after(grammarAccess.getExpressionAccess().getCeCalcExpParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__JeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getJeJudgeExpParserRuleCall_2_0()); }
		ruleJudgeExp
		{ after(grammarAccess.getExpressionAccess().getJeJudgeExpParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Expression__NeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getExpressionAccess().getNeNewExpParserRuleCall_3_0()); }
		ruleNewExp
		{ after(grammarAccess.getExpressionAccess().getNeNewExpParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
